import * as THREE from 'three';
import * as React from 'react';
import { ReactThreeFiber } from '@react-three/fiber';
declare type MeshTransmissionMaterialType = Omit<JSX.IntrinsicElements['meshPhysicalMaterial'], 'args'> & {
    refraction?: number;
    rgbShift?: number;
    noise?: number;
    saturation?: number;
    contrast?: number;
    resolution?: ReactThreeFiber.Vector2;
    buffer?: THREE.Texture;
    args?: [{
        samples: number;
    }];
};
declare global {
    namespace JSX {
        interface IntrinsicElements {
            meshTransmissionMaterial: MeshTransmissionMaterialType;
        }
    }
}
export declare const MeshTransmissionMaterial: React.ForwardRefExoticComponent<Pick<Omit<MeshTransmissionMaterialType, "args" | "resolution"> & {
    resolution?: number | undefined;
    samples?: number | undefined;
    background?: THREE.Texture | undefined;
}, "attach" | "children" | "key" | "onUpdate" | "saturation" | "background" | "buffer" | keyof THREE.MeshPhysicalMaterial | "resolution" | "samples" | "refraction" | "rgbShift" | "noise" | "contrast"> & React.RefAttributes<unknown>>;
export {};
