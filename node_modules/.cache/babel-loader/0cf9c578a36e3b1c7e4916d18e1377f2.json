{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Children, cloneElement, useMemo, useState } from 'react';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport { useTheme } from '../Flowbite/ThemeContext';\nimport { AccordionContent } from './AccordionContent';\nimport { AccordionPanel } from './AccordionPanel';\nimport { AccordionTitle } from './AccordionTitle';\n\nconst AccordionComponent = _ref => {\n  let {\n    alwaysOpen = false,\n    arrowIcon = HiChevronDown,\n    children,\n    flush = false,\n    collapseAll = false,\n    className,\n    theme: customTheme = {},\n    ...props\n  } = _ref;\n  const [isOpen, setOpen] = useState(collapseAll ? -1 : 0);\n  const panels = useMemo(() => Children.map(children, (child, i) => cloneElement(child, {\n    alwaysOpen,\n    arrowIcon,\n    flush,\n    isOpen: isOpen === i,\n    setOpen: () => setOpen(i)\n  })), [alwaysOpen, arrowIcon, children, flush, isOpen]);\n  const theme = mergeDeep(useTheme().theme.accordion.root, customTheme);\n  return _jsx(\"div\", {\n    className: classNames(theme.base, theme.flush[flush ? 'on' : 'off'], className),\n    \"data-testid\": \"flowbite-accordion\",\n    ...props,\n    children: panels\n  });\n};\n\nAccordionComponent.displayName = 'Accordion';\nAccordionPanel.displayName = 'Accordion.Panel';\nAccordionTitle.displayName = 'Accordion.Title';\nAccordionContent.displayName = 'Accordion.Content';\nexport const Accordion = Object.assign(AccordionComponent, {\n  Panel: AccordionPanel,\n  Title: AccordionTitle,\n  Content: AccordionContent\n});","map":{"version":3,"names":["jsx","_jsx","classNames","Children","cloneElement","useMemo","useState","HiChevronDown","mergeDeep","useTheme","AccordionContent","AccordionPanel","AccordionTitle","AccordionComponent","alwaysOpen","arrowIcon","children","flush","collapseAll","className","theme","customTheme","props","isOpen","setOpen","panels","map","child","i","accordion","root","base","displayName","Accordion","Object","assign","Panel","Title","Content"],"sources":["/Users/tomershmul/Documents/Portfolio/node_modules/flowbite-react/lib/esm/components/Accordion/Accordion.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Children, cloneElement, useMemo, useState } from 'react';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport { useTheme } from '../Flowbite/ThemeContext';\nimport { AccordionContent } from './AccordionContent';\nimport { AccordionPanel } from './AccordionPanel';\nimport { AccordionTitle } from './AccordionTitle';\nconst AccordionComponent = ({ alwaysOpen = false, arrowIcon = HiChevronDown, children, flush = false, collapseAll = false, className, theme: customTheme = {}, ...props }) => {\n    const [isOpen, setOpen] = useState(collapseAll ? -1 : 0);\n    const panels = useMemo(() => Children.map(children, (child, i) => cloneElement(child, { alwaysOpen, arrowIcon, flush, isOpen: isOpen === i, setOpen: () => setOpen(i) })), [alwaysOpen, arrowIcon, children, flush, isOpen]);\n    const theme = mergeDeep(useTheme().theme.accordion.root, customTheme);\n    return (_jsx(\"div\", { className: classNames(theme.base, theme.flush[flush ? 'on' : 'off'], className), \"data-testid\": \"flowbite-accordion\", ...props, children: panels }));\n};\nAccordionComponent.displayName = 'Accordion';\nAccordionPanel.displayName = 'Accordion.Panel';\nAccordionTitle.displayName = 'Accordion.Title';\nAccordionContent.displayName = 'Accordion.Content';\nexport const Accordion = Object.assign(AccordionComponent, {\n    Panel: AccordionPanel,\n    Title: AccordionTitle,\n    Content: AccordionContent,\n});\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,OAAjC,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AACA,MAAMC,kBAAkB,GAAG,QAAmJ;EAAA,IAAlJ;IAAEC,UAAU,GAAG,KAAf;IAAsBC,SAAS,GAAGR,aAAlC;IAAiDS,QAAjD;IAA2DC,KAAK,GAAG,KAAnE;IAA0EC,WAAW,GAAG,KAAxF;IAA+FC,SAA/F;IAA0GC,KAAK,EAAEC,WAAW,GAAG,EAA/H;IAAmI,GAAGC;EAAtI,CAAkJ;EAC1K,MAAM,CAACC,MAAD,EAASC,OAAT,IAAoBlB,QAAQ,CAACY,WAAW,GAAG,CAAC,CAAJ,GAAQ,CAApB,CAAlC;EACA,MAAMO,MAAM,GAAGpB,OAAO,CAAC,MAAMF,QAAQ,CAACuB,GAAT,CAAaV,QAAb,EAAuB,CAACW,KAAD,EAAQC,CAAR,KAAcxB,YAAY,CAACuB,KAAD,EAAQ;IAAEb,UAAF;IAAcC,SAAd;IAAyBE,KAAzB;IAAgCM,MAAM,EAAEA,MAAM,KAAKK,CAAnD;IAAsDJ,OAAO,EAAE,MAAMA,OAAO,CAACI,CAAD;EAA5E,CAAR,CAAjD,CAAP,EAAqJ,CAACd,UAAD,EAAaC,SAAb,EAAwBC,QAAxB,EAAkCC,KAAlC,EAAyCM,MAAzC,CAArJ,CAAtB;EACA,MAAMH,KAAK,GAAGZ,SAAS,CAACC,QAAQ,GAAGW,KAAX,CAAiBS,SAAjB,CAA2BC,IAA5B,EAAkCT,WAAlC,CAAvB;EACA,OAAQpB,IAAI,CAAC,KAAD,EAAQ;IAAEkB,SAAS,EAAEjB,UAAU,CAACkB,KAAK,CAACW,IAAP,EAAaX,KAAK,CAACH,KAAN,CAAYA,KAAK,GAAG,IAAH,GAAU,KAA3B,CAAb,EAAgDE,SAAhD,CAAvB;IAAmF,eAAe,oBAAlG;IAAwH,GAAGG,KAA3H;IAAkIN,QAAQ,EAAES;EAA5I,CAAR,CAAZ;AACH,CALD;;AAMAZ,kBAAkB,CAACmB,WAAnB,GAAiC,WAAjC;AACArB,cAAc,CAACqB,WAAf,GAA6B,iBAA7B;AACApB,cAAc,CAACoB,WAAf,GAA6B,iBAA7B;AACAtB,gBAAgB,CAACsB,WAAjB,GAA+B,mBAA/B;AACA,OAAO,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAActB,kBAAd,EAAkC;EACvDuB,KAAK,EAAEzB,cADgD;EAEvD0B,KAAK,EAAEzB,cAFgD;EAGvD0B,OAAO,EAAE5B;AAH8C,CAAlC,CAAlB"},"metadata":{},"sourceType":"module"}