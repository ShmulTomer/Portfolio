{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useId } from 'react';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport { useTheme } from '../Flowbite/ThemeContext';\nexport const ToggleSwitch = _ref => {\n  let {\n    checked,\n    disabled,\n    label,\n    name,\n    onChange,\n    className,\n    color = 'blue',\n    theme: customTheme = {},\n    ...props\n  } = _ref;\n  const theme = mergeDeep(useTheme().theme.toggleSwitch, customTheme);\n  const id = useId();\n\n  const toggle = () => onChange(!checked);\n\n  const handleClick = event => {\n    event.preventDefault();\n    toggle();\n  };\n\n  const handleKeyPress = event => {\n    event.preventDefault();\n  };\n\n  return _jsxs(_Fragment, {\n    children: [name && checked && _jsx(\"input\", {\n      checked: checked,\n      hidden: true,\n      name: name,\n      readOnly: true,\n      type: \"checkbox\",\n      className: \"sr-only\"\n    }), _jsxs(\"button\", {\n      \"aria-checked\": checked,\n      \"aria-labelledby\": `${id}-flowbite-toggleswitch-label`,\n      disabled: disabled,\n      id: `${id}-flowbite-toggleswitch`,\n      onClick: handleClick,\n      onKeyPress: handleKeyPress,\n      role: \"switch\",\n      tabIndex: 0,\n      type: \"button\",\n      className: classNames(theme.root.base, theme.root.active[disabled ? 'off' : 'on'], className),\n      ...props,\n      children: [_jsx(\"div\", {\n        \"data-testid\": \"flowbite-toggleswitch-toggle\",\n        className: classNames(theme.toggle.base, theme.toggle.checked[checked ? 'on' : 'off'], !disabled && checked && theme.toggle.checked.color[color])\n      }), _jsx(\"span\", {\n        \"data-testid\": \"flowbite-toggleswitch-label\",\n        id: `${id}-flowbite-toggleswitch-label`,\n        className: theme.root.label,\n        children: label\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","classNames","useId","mergeDeep","useTheme","ToggleSwitch","checked","disabled","label","name","onChange","className","color","theme","customTheme","props","toggleSwitch","id","toggle","handleClick","event","preventDefault","handleKeyPress","children","hidden","readOnly","type","onClick","onKeyPress","role","tabIndex","root","base","active"],"sources":["/Users/tomershmul/Documents/Portfolio/node_modules/flowbite-react/lib/esm/components/ToggleSwitch/ToggleSwitch.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useId } from 'react';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport { useTheme } from '../Flowbite/ThemeContext';\nexport const ToggleSwitch = ({ checked, disabled, label, name, onChange, className, color = 'blue', theme: customTheme = {}, ...props }) => {\n    const theme = mergeDeep(useTheme().theme.toggleSwitch, customTheme);\n    const id = useId();\n    const toggle = () => onChange(!checked);\n    const handleClick = (event) => {\n        event.preventDefault();\n        toggle();\n    };\n    const handleKeyPress = (event) => {\n        event.preventDefault();\n    };\n    return (_jsxs(_Fragment, { children: [name && checked && _jsx(\"input\", { checked: checked, hidden: true, name: name, readOnly: true, type: \"checkbox\", className: \"sr-only\" }), _jsxs(\"button\", { \"aria-checked\": checked, \"aria-labelledby\": `${id}-flowbite-toggleswitch-label`, disabled: disabled, id: `${id}-flowbite-toggleswitch`, onClick: handleClick, onKeyPress: handleKeyPress, role: \"switch\", tabIndex: 0, type: \"button\", className: classNames(theme.root.base, theme.root.active[disabled ? 'off' : 'on'], className), ...props, children: [_jsx(\"div\", { \"data-testid\": \"flowbite-toggleswitch-toggle\", className: classNames(theme.toggle.base, theme.toggle.checked[checked ? 'on' : 'off'], !disabled && checked && theme.toggle.checked.color[color]) }), _jsx(\"span\", { \"data-testid\": \"flowbite-toggleswitch-label\", id: `${id}-flowbite-toggleswitch-label`, className: theme.root.label, children: label })] })] }));\n};\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAhB,EAAsBC,IAAI,IAAIC,KAA9B,EAAqCC,QAAQ,IAAIC,SAAjD,QAAkE,mBAAlE;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAO,MAAMC,YAAY,GAAG,QAAgH;EAAA,IAA/G;IAAEC,OAAF;IAAWC,QAAX;IAAqBC,KAArB;IAA4BC,IAA5B;IAAkCC,QAAlC;IAA4CC,SAA5C;IAAuDC,KAAK,GAAG,MAA/D;IAAuEC,KAAK,EAAEC,WAAW,GAAG,EAA5F;IAAgG,GAAGC;EAAnG,CAA+G;EACxI,MAAMF,KAAK,GAAGV,SAAS,CAACC,QAAQ,GAAGS,KAAX,CAAiBG,YAAlB,EAAgCF,WAAhC,CAAvB;EACA,MAAMG,EAAE,GAAGf,KAAK,EAAhB;;EACA,MAAMgB,MAAM,GAAG,MAAMR,QAAQ,CAAC,CAACJ,OAAF,CAA7B;;EACA,MAAMa,WAAW,GAAIC,KAAD,IAAW;IAC3BA,KAAK,CAACC,cAAN;IACAH,MAAM;EACT,CAHD;;EAIA,MAAMI,cAAc,GAAIF,KAAD,IAAW;IAC9BA,KAAK,CAACC,cAAN;EACH,CAFD;;EAGA,OAAQvB,KAAK,CAACE,SAAD,EAAY;IAAEuB,QAAQ,EAAE,CAACd,IAAI,IAAIH,OAAR,IAAmBV,IAAI,CAAC,OAAD,EAAU;MAAEU,OAAO,EAAEA,OAAX;MAAoBkB,MAAM,EAAE,IAA5B;MAAkCf,IAAI,EAAEA,IAAxC;MAA8CgB,QAAQ,EAAE,IAAxD;MAA8DC,IAAI,EAAE,UAApE;MAAgFf,SAAS,EAAE;IAA3F,CAAV,CAAxB,EAA2Ib,KAAK,CAAC,QAAD,EAAW;MAAE,gBAAgBQ,OAAlB;MAA2B,mBAAoB,GAAEW,EAAG,8BAApD;MAAmFV,QAAQ,EAAEA,QAA7F;MAAuGU,EAAE,EAAG,GAAEA,EAAG,wBAAjH;MAA0IU,OAAO,EAAER,WAAnJ;MAAgKS,UAAU,EAAEN,cAA5K;MAA4LO,IAAI,EAAE,QAAlM;MAA4MC,QAAQ,EAAE,CAAtN;MAAyNJ,IAAI,EAAE,QAA/N;MAAyOf,SAAS,EAAEV,UAAU,CAACY,KAAK,CAACkB,IAAN,CAAWC,IAAZ,EAAkBnB,KAAK,CAACkB,IAAN,CAAWE,MAAX,CAAkB1B,QAAQ,GAAG,KAAH,GAAW,IAArC,CAAlB,EAA8DI,SAA9D,CAA9P;MAAwU,GAAGI,KAA3U;MAAkVQ,QAAQ,EAAE,CAAC3B,IAAI,CAAC,KAAD,EAAQ;QAAE,eAAe,8BAAjB;QAAiDe,SAAS,EAAEV,UAAU,CAACY,KAAK,CAACK,MAAN,CAAac,IAAd,EAAoBnB,KAAK,CAACK,MAAN,CAAaZ,OAAb,CAAqBA,OAAO,GAAG,IAAH,GAAU,KAAtC,CAApB,EAAkE,CAACC,QAAD,IAAaD,OAAb,IAAwBO,KAAK,CAACK,MAAN,CAAaZ,OAAb,CAAqBM,KAArB,CAA2BA,KAA3B,CAA1F;MAAtE,CAAR,CAAL,EAAoNhB,IAAI,CAAC,MAAD,EAAS;QAAE,eAAe,6BAAjB;QAAgDqB,EAAE,EAAG,GAAEA,EAAG,8BAA1D;QAAyFN,SAAS,EAAEE,KAAK,CAACkB,IAAN,CAAWvB,KAA/G;QAAsHe,QAAQ,EAAEf;MAAhI,CAAT,CAAxN;IAA5V,CAAX,CAAhJ;EAAZ,CAAZ,CAAb;AACH,CAZM"},"metadata":{},"sourceType":"module"}